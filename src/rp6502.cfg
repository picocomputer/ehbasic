SYMBOLS {
    __STARTUP__:    type = import;
    __STACKSIZE__:  type = weak, value = $0080;
    __IBUFFSIZE__:  type = weak, value = $50;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0014, size = $0047;
    CPUSTACK: file = "",               start = $0100, size = $0100;
    HEADER:   file = %O, define = yes, start = $D000, size = $0016;
    RAM:      file = %O, define = yes, start = __HEADER_START__ + __HEADER_SIZE__,
              size = $FF00 - __HEADER_START__ - __HEADER_SIZE__ - __STACKSIZE__ - __IBUFFSIZE__;
}
SEGMENTS {
    ZEROPAGE: load = ZP,     type = zp;
    STARTUP:  load = RAM,    type = ro;
    LOWCODE:  load = RAM,    type = ro,  optional = yes;
    ONCE:     load = RAM,    type = ro,  optional = yes;
    CODE:     load = RAM,    type = ro;
    RODATA:   load = RAM,    type = ro;
    DATA:     load = RAM,    type = rw,  define   = yes;
    BSS:      load = RAM,    type = bss, define   = yes;
    HEAD:     load = HEADER, type = ro;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
